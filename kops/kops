export AWS_ACCESS_KEY_ID=$(aws configure get aws_access_key_id --profile kops)
export AWS_SECRET_ACCESS_KEY=$(aws configure get aws_secret_access_key --profile kops)

export NAME=meem.k8s.local
export KOPS_STATE_STORE=s3://api-meem-com-state-store
export VPC_ID=vpc-da92b0b3
export NETWORK_CIDR=172.31.0.0/16

aws ec2 describe-availability-zones --region us-east-2 --profile syed_profile


kops create cluster --zones us-east-2a meem.k8s.local --node-count 0 --node-size t2.micro --master-size t2.micro
kops create cluster --zones us-east-2a meem.k8s.local --node-count 0 --master-size t2.micro --out . --target terraform

kops edit cluster ${NAME}

kops update cluster ${NAME} --yes

kops create -f test.yaml

kops delete cluster --name ${NAME} --yes

kops get --name ${NAME} -oyaml > test.yaml

kops create secret sshpublickey admin -i ~/.ssh/id_rsa.pub --name ${NAME} --state ${KOPS_STATE_STORE}
kops update cluster ${NAME} --yes
kops validate cluster

kops create -f test.yaml 

export VPC_ID=vpc-da92b0b3
export NETWORK_CIDR=172.31.0.0/16
kops create cluster --zones us-east-2a meem.k8s.local --node-count 0 --node-size t2.micro --master-size t2.micro --vpc=${VPC_ID}



Suggestions:
 * validate cluster: kops validate cluster
 * list nodes: kubectl get nodes --show-labels
 * ssh to the master: ssh -i ~/.ssh/id_rsa admin@api.meem.k8s.local
The admin user is specific to Debian. If not using Debian please use the appropriate user based on your OS.
 * read about installing addons: https://github.com/kubernetes/kops/blob/master/docs/addons.md

Suggestions:
 * validate cluster: kops validate cluster
 * list nodes: kubectl get nodes --show-labels
 * ssh to the master: ssh -i ~/.ssh/id_rsa admin@api.meem.k8s.local
The admin user is specific to Debian. If not using Debian please use the appropriate user based on your OS.
 * read about installing addons: https://github.com/kubernetes/kops/blob/master/docs/addons.md

khalid@ssd:~/m/config$ aws ecr create-repository --repository-name meem --profile syed_profile --region us-east-2
{
    "repository": {
        "registryId": "755455355830",
        "repositoryUri": "755455355830.dkr.ecr.us-east-2.amazonaws.com/meem",
        "createdAt": 1519829992.0,
        "repositoryName": "meem",
        "repositoryArn": "arn:aws:ecr:us-east-2:755455355830:repository/meem"
    }
}

aws ecr get-login --profile syed_profile --region us-east-2
docker push 755455355830.dkr.ecr.us-east-2.amazonaws.com/role-service-grpc:latest


